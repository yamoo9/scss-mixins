@use 'sass:meta';
@use 'sass:map';

$easings: (
  in-sine: cubic-bezier(0.47, 0, 0.745, 0.715),
  out-sine: cubic-bezier(0.39, 0.575, 0.565, 1),
  inout-sine: cubic-bezier(0.39, 0.575, 0.565, 1),
  in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53),
  out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94),
  inout-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94),
  in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19),
  out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1),
  inout-cubic: cubic-bezier(0.215, 0.61, 0.355, 1),
  in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22),
  out-quart: cubic-bezier(0.165, 0.84, 0.44, 1),
  inout-quart: cubic-bezier(0.165, 0.84, 0.44, 1),
  in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06),
  out-quint: cubic-bezier(0.23, 1, 0.32, 1),
  inout-quint: cubic-bezier(0.23, 1, 0.32, 1),
  in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035),
  out-expo: cubic-bezier(0.19, 1, 0.22, 1),
  inout-expo: cubic-bezier(0.19, 1, 0.22, 1),
  in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335),
  out-circ: cubic-bezier(0.075, 0.82, 0.165, 1),
  inout-circ: cubic-bezier(0.075, 0.82, 0.165, 1),
  in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045),
  out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275),
  inout-back: cubic-bezier(0.68, -0.55, 0.265, 1.55),
) !default;

//* -------------------------------------------------------------------------- */

@function ease($keyword) {
  @if map-has-key($easings, $keyword) {
    @return map-get($easings, $keyword);
  } @else {
    @error 'ease() 함수에 전달 가능한 값은 다음 중 하나입니다 → #{map-keys($easings)}';
  }
}

@function ease-add($keyword, $easing-function) {
  @if not meta.global-variable-exists('easings') {
    @error '$easings 이징 함수 맵 글로벌 변수가 존재하지 않습니다.';
  }
  @return map.set($easings, $keyword, $easing-function);
}

@function ease-merge($extend-easings: ()) {
  @if not meta.global-variable-exists('easings') {
    @error '$easings 이징 함수 맵 글로벌 변수가 존재하지 않습니다.';
  }
  @return map.deep-merge($easings, $extend-easings);
}
